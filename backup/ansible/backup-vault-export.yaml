- name: Backup Vault export
  hosts: localhost
  gather_facts: true

  vars:
    working_dir: "{{ ansible_env.HOME }}"
    vault_export_json: "{{ working_dir }}/export.json"
    
    vault_api: "{{ lookup('ansible.builtin.env', 'VAULT_API') | default('https://vault.tryrocket.cloud', true) }}"
    vault_token: "{{ lookup('ansible.builtin.env', 'VAULT_TOKEN') }}"
    
    healthchecks_uuid: "{{ lookup('ansible.builtin.env', 'VAULT_HEALTHCHECKSIO_CHECK_UUID') }}"
    healthchecks_api_key: "{{ lookup('ansible.builtin.env', 'HEALTHCHECKSIO_API_KEY') }}"
    
    restic_env:
      AWS_ACCESS_KEY_ID: "{{ lookup('ansible.builtin.env', 'VAULT_IONOS_COM_AWS_ACCESS_KEY_ID') }}"
      AWS_SECRET_ACCESS_KEY: "{{ lookup('ansible.builtin.env', 'VAULT_IONOS_COM_AWS_SECRET_ACCESS_KEY') }}"
      RESTIC_REPOSITORY: "{{ lookup('ansible.builtin.env', 'VAULT_IONOS_COM_RESTIC_REPOSITORY') }}"
      RESTIC_PASSWORD: "{{ lookup('ansible.builtin.env', 'VAULT_IONOS_COM_RESTIC_PASSWORD') }}"

  pre_tasks:
    - name: Ensure working directory exists
      file:
        path: "{{ working_dir }}"
        state: directory
        mode: '0755'

  tasks:
    - block:
        - name: Get HashiCorp Vault version
          uri:
            url: "{{ vault_api }}/v1/sys/health"
            method: GET
            return_content: yes
            status_code: [200]
          register: vault_health

        - name: Set vault version fact
          set_fact:
            vault_version: "{{ vault_health.json.version }}"
          when: vault_health.json is defined and vault_health.json.version is defined

        - name: Debug Vault version
          debug:
            msg: "Vault version is: {{ vault_version }}"
            
        - name: Export Vault data
          shell: "medusa export kv -o {{ vault_export_json }}"
          register: vault_export_result
          changed_when: False
          environment:
            VAULT_ADDR: "{{ vault_api }}"
            VAULT_TOKEN: "{{ vault_token }}"

        - name: Get medusa CLI version
          shell: medusa version
          register: medusa_version_result
          changed_when: false

        - name: Run Restic backup
          shell: |
            restic backup --host core.tryrocket.cloud \
              --tag vault_version:{{ vault_version }} \
              --tag backup_type:export \
              --tag environment:production \
              --tag medusa_version:{{ medusa_version_result }} \
              "{{ vault_export_json }}"
          environment: "{{ restic_env }}"
          register: restic_backup_result

        - name: Run Restic check
          shell: restic check --read-data-subset 1/10
          environment: "{{ restic_env }}"
          register: restic_check_result

        - name: Run Restic forget and prune snapshots
          shell: restic forget --keep-daily 30 --keep-monthly 3 --keep-yearly 1 --prune
          environment: "{{ restic_env }}"
          register: restic_forget_result

        - name: Signal success to healthchecks.io
          community.healthchecksio.ping:
            state: present
            uuid: "{{ healthchecks_uuid }}"
            api_key: "{{ healthchecks_api_key }}"
            signal: "success"

      rescue:
        - name: Signal failure to healthchecks.io
          community.healthchecksio.ping:
            state: present
            uuid: "{{ healthchecks_uuid }}"
            api_key: "{{ healthchecks_api_key }}"
            signal: "fail"
