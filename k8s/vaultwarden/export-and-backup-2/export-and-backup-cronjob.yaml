apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-vaultwarden-export-2
spec:
  suspend: false
  schedule: "0 22 * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 600
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          restartPolicy: Never

          volumes:
            - name: vaultwarden-export-volume
              emptyDir: {}
            - name: support-volume
              persistentVolumeClaim:
                claimName: vaultwarden-support-pvc

          initContainers:
            - name: get-vaultwarden-version
              image: alpine/curl
              env:
                - name: VAULTWARDEN_HOST
                  value: vaultwarden.tryrocket.cloud
              command:
                - sh
                - -c
                - |
                  set -euo pipefail

                  apk add --no-cache curl jq

                  curl -sSf -m10 https://${VAULTWARDEN_HOST}/api/config \
                    | jq -r '.version // error("no version in API response")' \
                    > /export/vaultwarden.env
              volumeMounts:
                - name: vaultwarden-export-volume
                  mountPath: /export

            - name: export-2967ac9f-f0e5-4881-8be5-9d08371a167a
              image: debian:bookworm-slim
              imagePullPolicy: Always
              env:
                - name: VAULTWARDEN_HOST
                  value: vaultwarden.tryrocket.cloud
                - name: VAULTWARDEN_USER_ID
                  value: 2967ac9f-f0e5-4881-8be5-9d08371a167a
                - name: VAULTWARDEN_EXPORT_JSON
                  value: 
                - name: BW_CLI_VERSION
                  value: 2025.4.0
              envFrom:
                - secretRef:
                    name: all-in-one
              command: ["/bin/sh","-c"]
              args:
                - |
                  set -euo

                  apt-get update
                  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
                    curl unzip ca-certificates \
                  && rm -rf /var/lib/apt/lists/*

                  curl -sSL --fail https://github.com/bitwarden/clients/releases/latest/download/bw-linux-${BW_CLI_VERSION}.zip -o /tmp/bw.zip
                  unzip -q /tmp/bw.zip -d /usr/local/bin && rm /tmp/bw.zip
                  chmod +x /usr/local/bin/bw
                  
                  bw --version

                  bw config server https://${VAULTWARDEN_HOST}
                  export BW_SESSION=$(bw login --raw "${VAULTWARDEN_USERNAME}" "${VAULTWARDEN_PASSWORD}")
                  bw sync
                  bw export \
                    --format encrypted_json \
                    --password "${VAULTWARDEN_PASSWORD}" \
                    --output /export/vaultwarden-export-"${VAULTWARDEN_USER_ID}"-encrypted_json.json
                  bw export \
                    --format json \
                    --output /export/vaultwarden-export-"${VAULTWARDEN_USER_ID}"-plain.json
                  bw logout

                  [ -s "/export/vaultwarden-export-${VAULTWARDEN_USER_ID}-encrypted_json.json" ] || { echo "ERROR: export failed or produced empty file" >&2; exit 1; }
                  [ -s "/export/vaultwarden-export-${VAULTWARDEN_USER_ID}-plain.json" ] || { echo "ERROR: export failed or produced empty file" >&2; exit 1; }
              volumeMounts:
                - name: vaultwarden-export-volume
                  mountPath: /export

            - name: encrypt-with-age
              image: alpine:3.18
              env:
                - name: VAULTWARDEN_USER_ID
                  value: 2967ac9f-f0e5-4881-8be5-9d08371a167a
                - name: AGE_VERSION
                  value: 1.2.1
              envFrom:
                - secretRef:
                    name: all-in-one

              command: ["/bin/sh","-c"]
              args:
                - |
                  set -euxo pipefail

                  apk add --no-cache curl tar gzip ca-certificates

                  curl -fsSL "https://github.com/FiloSottile/age/releases/latest/download/age-v${AGE_VERSION}-linux-amd64.tar.gz" \
                  | tar xz -C /usr/local/bin --strip-components=1
                  chmod +x /usr/local/bin/age /usr/local/bin/age-keygen

                  age --version

                  PLAIN=/export/vaultwarden-export-"${VAULTWARDEN_USER_ID}"-plain.json
                  CIPHER=/export/vaultwarden-export-"${VAULTWARDEN_USER_ID}".age

                  [ -s "${PLAIN}" ] || { echo "ERROR: missing plaintext export" >&2; exit 1; }

                  age --recipient "${AGE_RECIPIENT}" --output "${CIPHER}" "${PLAIN}"

                  [ -s "${CIPHER}" ] || { echo "ERROR: age encryption failed" >&2; exit 1; }

                  head -c18 "${CIPHER}"

                  if head -c18 "/export/vaultwarden-export-${VAULTWARDEN_USER_ID}.age" | grep -q '^age-encryption\.org/v1'; then
                    echo "Looks like valid age format."
                  else
                    echo "Not a valid age file."
                    exit 1
                  fi

              volumeMounts:
                - name: vaultwarden-export-volume
                  mountPath: /export


          containers:
            - name: test
              image: alpine:3.16
              env:
                - name: VAULTWARDEN_HOST
                  value: https://vaultwarden.tryrocket.cloud
              command:
                - sh
                - -c
                - |
                  echo test

